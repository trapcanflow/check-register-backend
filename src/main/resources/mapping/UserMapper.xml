<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.check.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.njs.check.pojo.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="gender" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="wechat_account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="wechat_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reg_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="indentity_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="job" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="first_position_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="second_position_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="first_dep_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="second_dep_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="woke_cur_add" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, gender, username, name, phone_num, wechat_account, wechat_id, reg_time, indentity_id, 
    job, first_position_id, second_position_id, first_dep_id, second_dep_id, role_id, 
    woke_cur_add, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.check.pojo.User">
    insert into user (id, gender, username, 
      name, phone_num, wechat_account, 
      wechat_id, reg_time, indentity_id, 
      job, first_position_id, second_position_id, 
      first_dep_id, second_dep_id, role_id, 
      woke_cur_add, status)
    values (#{id,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, #{wechatAccount,jdbcType=VARCHAR}, 
      #{wechatId,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, #{indentityId,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{firstPositionId,jdbcType=INTEGER}, #{secondPositionId,jdbcType=INTEGER}, 
      #{firstDepId,jdbcType=INTEGER}, #{secondDepId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{wokeCurAdd,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.check.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="wechatAccount != null">
        wechat_account,
      </if>
      <if test="wechatId != null">
        wechat_id,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="indentityId != null">
        indentity_id,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="firstPositionId != null">
        first_position_id,
      </if>
      <if test="secondPositionId != null">
        second_position_id,
      </if>
      <if test="firstDepId != null">
        first_dep_id,
      </if>
      <if test="secondDepId != null">
        second_dep_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="wokeCurAdd != null">
        woke_cur_add,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="wechatAccount != null">
        #{wechatAccount,jdbcType=VARCHAR},
      </if>
      <if test="wechatId != null">
        #{wechatId,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="indentityId != null">
        #{indentityId,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="firstPositionId != null">
        #{firstPositionId,jdbcType=INTEGER},
      </if>
      <if test="secondPositionId != null">
        #{secondPositionId,jdbcType=INTEGER},
      </if>
      <if test="firstDepId != null">
        #{firstDepId,jdbcType=INTEGER},
      </if>
      <if test="secondDepId != null">
        #{secondDepId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="wokeCurAdd != null">
        #{wokeCurAdd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.check.pojo.User">
    update user
    <set>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="wechatAccount != null">
        wechat_account = #{wechatAccount,jdbcType=VARCHAR},
      </if>
      <if test="wechatId != null">
        wechat_id = #{wechatId,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="indentityId != null">
        indentity_id = #{indentityId,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="firstPositionId != null">
        first_position_id = #{firstPositionId,jdbcType=INTEGER},
      </if>
      <if test="secondPositionId != null">
        second_position_id = #{secondPositionId,jdbcType=INTEGER},
      </if>
      <if test="firstDepId != null">
        first_dep_id = #{firstDepId,jdbcType=INTEGER},
      </if>
      <if test="secondDepId != null">
        second_dep_id = #{secondDepId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="wokeCurAdd != null">
        woke_cur_add = #{wokeCurAdd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.check.pojo.User">
    update user
    set gender = #{gender,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      wechat_account = #{wechatAccount,jdbcType=VARCHAR},
      wechat_id = #{wechatId,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      indentity_id = #{indentityId,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      first_position_id = #{firstPositionId,jdbcType=INTEGER},
      second_position_id = #{secondPositionId,jdbcType=INTEGER},
      first_dep_id = #{firstDepId,jdbcType=INTEGER},
      second_dep_id = #{secondDepId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      woke_cur_add = #{wokeCurAdd,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserByIdentityId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where indentity_id = #{identityId,jdbcType=VARCHAR}
  </select>

  <select id="getUpperLeaderNameList" parameterType="java.lang.Integer" resultType="java.lang.String">
    select name
    from user
    where second_dep_id = #{secondDepId,jdbcType=INTEGER}
    and first_position_id = 2
  </select>


  <select id="getLeader" parameterType="java.lang.Integer" resultType="java.lang.String">
    select name
    from user
    where first_dep_id = #{firstDepId,jdbcType=INTEGER}
    and first_position_id = 1
  </select>

  <select id="getIdByName" parameterType="java.lang.String" resultType="java.lang.Integer">
    select id
    from user
    where name = #{name,jdbcType=INTEGER}
  </select>

  <select id="getFirstPositionById" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select first_position_id
    from user
    where id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="getAllName" resultType="java.lang.String">
    select name
    from user
  </select>

  <select id="getSecondDepId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select second_dep_id
    from user
    where id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>