<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.check.dao.PdfUrlMapper">
  <resultMap id="BaseResultMap" type="com.njs.check.pojo.PdfUrl">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="word_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="application_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.njs.check.pojo.PdfUrl">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="word_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="application_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="extra" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, word_url, create_time, application_id
  </sql>
  <sql id="Blob_Column_List">
    extra
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pdf_url
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pdf_url
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.check.pojo.PdfUrl">
    insert into pdf_url (id, word_url, create_time, 
      application_id, extra)
    values (#{id,jdbcType=INTEGER}, #{wordUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{applicationId,jdbcType=INTEGER}, #{extra,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.check.pojo.PdfUrl">
    insert into pdf_url
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="wordUrl != null">
        word_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="extra != null">
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="wordUrl != null">
        #{wordUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationId != null">
        #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.check.pojo.PdfUrl">
    update pdf_url
    <set>
      <if test="wordUrl != null">
        word_url = #{wordUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationId != null">
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.njs.check.pojo.PdfUrl">
    update pdf_url
    set word_url = #{wordUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      application_id = #{applicationId,jdbcType=INTEGER},
      extra = #{extra,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.check.pojo.PdfUrl">
    update pdf_url
    set word_url = #{wordUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      application_id = #{applicationId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByApplicantId" parameterType="java.lang.Integer" resultType="java.lang.String">
    select word_url
    from pdf_url
    where application_id = #{applicationId,jdbcType=INTEGER}
  </select>
</mapper>